#########################################################################
# Title:         Cloudbox: Organizr Role                                #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  lsiocommunity/organizr                                 #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    subdomain: "{{ item }}"
  with_items:
    - "{{ user.domain }}"
    - "www"
  when: (cloudflare_enabled)

- name: Stop and remove any existing container
  docker_container:
    name: organizr
    state: absent

- name: Remove certain js files from organizr
  file:
    path: "/opt/organizr/www/Dashboard/js/{{ item }}"
    state: absent
  with_items:
    - "custom.min.js"
    - "functions.js"
  ignore_errors: yes

- name: Create Organizr directories
  file: 
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    recurse: yes
  with_items:
    - /opt/organizr

- name: Create and start container
  docker_container:
    name: organizr
    image: "organizrtools/organizr-v2:plex"
    pull: yes
    published_ports:
      - "127.0.0.1:7421:80"
    env:
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/organizr:/config"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
      "traefik.http.routers.organizr.tls": "true"
      "traefik.http.routers.organizr.rule": "Host(`{{ user.domain }}`)"
    networks:
      - name: cloudbox
        aliases:
          - organizr
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
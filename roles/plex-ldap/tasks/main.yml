#########################################################################
# Title:         Coolflix: Plex LDAP                                    #
# Author(s):     Fma965                                                 #
# URL:           https://github.com/Fma965/coolflix                     #
# Docker Images: starbix/plex-ldap                                      #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Stop and remove any existing container
  docker_container:
    name: plex-ldap
    state: absent

- name: Import Plex Auth Token role
  import_role:
    name: plex_auth_token

- name: "Get Plex machineIdentifier and friendlyName"
  uri:
    url: "http://127.0.0.1:32400/?X-Plex-Token={{ plex_auth_token }}"
    validate_certs: no
    return_content: yes
  register: plex_details_raw

- name: Display Plex MachineID
  debug:
    msg: "Plex machineIdentifier: {{ plex_details_raw.content | regex_findall('machineIdentifier=\"(.*?)\"') | first }}"

- name: Display Plex ServeName
  debug:
    msg: "Plex friendlyName: {{ plex_details_raw.content | regex_findall('friendlyName=\"(.*?)\"') | first }}"

- name: Create and start container
  docker_container:
    name: plex-ldap
    image: "starbix/plex-ldap:latest"
    pull: yes
    published_ports:
      - "127.0.0.1:2389:2389"
    env:
      TOKEN: "{{ plex_auth_token }}"
      MACHINEID: "{{ plex_details_raw.content | regex_findall('machineIdentifier=\"(.*?)\"') | first }}"
      SERVERNAME: "{{ plex_details_raw.content | regex_findall('friendlyName=\"(.*?)\"') | first }}"
      UID: "{{ uid }}"
      GID: "{{ gid }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
      "traefik.enable": "false"
    networks:
      - name: cloudbox
        aliases:
          - plex-ldap
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
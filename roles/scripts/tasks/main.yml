#########################################################################
# Title:         Cloudbox: Scripts Role                                 #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Install common packages
  apt:
    state: present
    name:
      - jq
      - figlet
      - toilet
      - boxes
      - dnsutils

- name: Install common pip modules
  pip:
    state: present
    name:
      - yq

- name: Create script directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }} recurse=yes"
  with_items:
    - /opt/scripts
    - /opt/scripts/docker
    - /opt/scripts/nzbget
    - /opt/scripts/plex
    - /opt/scripts/plex_autoscan
    - /opt/scripts/plexpy
    - /opt/scripts/torrents
    - /opt/scripts/rclone
    - /opt/scripts/other

- name: Import 'TorrentCleanup.py'
  get_url:
    url:  "https://raw.githubusercontent.com/l3uddz/TorrentCleanup/master/TorrentCleanup.py"
    dest: "/opt/scripts/torrents/TorrentCleanup.py"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes
    validate_certs: no
  ignore_errors: yes

- name: Import 'plex_trash_fixer.py'
  get_url:
    url:  "https://raw.githubusercontent.com/l3uddz/plex_trash_fixer/master/plex_trash_fixer.py"
    dest: "/opt/scripts/plex/plex_trash_fixer.py"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes
    validate_certs: no
  ignore_errors: yes

- name: Import 'plex_token.sh'
  copy:
    src: "plex_token.sh"
    dest: "/opt/scripts/plex/plex_token.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes

- name: Import 'plex_autoscan_url.sh'
  copy:
    src: "plex_autoscan_url.sh"
    dest: "/opt/scripts/plex_autoscan/plex_autoscan_url.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes

- name: Import 'plex_create_pfx.sh'
  copy:
    src: "plex_create_pfx.sh"
    dest: "/opt/scripts/plex/plex_create_pfx.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes

- name: Check if 'restart_containers.sh' exists
  stat:
    path: "/opt/scripts/docker/restart_containers.sh"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: restart_containers

- name: Import 'restart_containers.sh'
  copy:
    src: "restart_containers.sh"
    dest: "/opt/scripts/docker/restart_containers.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    force: yes
  when: not restart_containers.stat.exists

- name: Check if 'tronitor.sh' exists
  stat:
    path: "/opt/scripts/other/tronitor.sh"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: tronitor

- name: Adding tronitor.sh file
  template:
    src: ../templates/tronitor.sh.j2
    dest: "/opt/scripts/other/tronitor.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
  when: not tronitor.stat.exists

- name: Check if 'tronitor.sh' exists
  stat:
    path: "/opt/scripts/other/tronitor.sh"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: tronitor

- name: Adding tronitor.sh file
  template:
    src: ../templates/tronitor.sh.j2
    dest: "/opt/scripts/other/tronitor.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
  when: not tronitor.stat.exists

- name: Check if 'application_healthchecks.sh' exists
  stat:
    path: "/opt/scripts/other/application_healthchecks.sh"
    get_attributes: false
    get_checksum: false
    get_md5: false
    get_mime: false
  register: application_healthchecks

- name: Adding application_healthchecks.sh file
  template:
    src: ../templates/application_healthchecks.sh.j2
    dest: "/opt/scripts/other/application_healthchecks.sh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
  when: not application_healthchecks.stat.exists